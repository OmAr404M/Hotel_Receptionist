package javaapplication10;

import java.util.logging.Level;
import java.util.logging.Logger;
//import java.lang.System.Logger;
//import java.lang.System.Logger.Level;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author omar
 */
public class Updatae extends javax.swing.JFrame {

    /**
     * Creates new form Updatae
     */

     public Updatae( int number) throws ClassNotFoundException, SQLException  {
         initComponents();
        
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel1","root","");
            Statement st = c.createStatement();
            String sql = "SELECT * from costumert where id='"+number+"' ";
            ResultSet rs = st.executeQuery(sql);
            id1.setText(number+"");
            while(rs.next()){
                                
            id1.setText(rs.getInt("id")+"");
            fName.setText(rs.getString("fname"));
            lName.setText(rs.getString("lname"));
            email1.setText(rs.getString("email"));
            jLocaleChooser1.setSelectedItem(rs.getString("Nationality"));
            address.setText(rs.getString("address"));
            DB.setDateFormatString(rs.getString("DateOfB"));
            gender1.setSelectedItem(rs.getString("Gender"));
            jDateCheckIn.setDateFormatString(rs.getString("CheckI"));
            jDateCheckOut.setDateFormatString(rs.getString("CheckO"));
            meal.setSelectedItem(rs.getString("meal"));
            jComboRoomType.setSelectedItem(rs.getString("RoomT"));
            jComboRoomNo.setSelectedItem(rs.getString("RoomN"));
            nCheckOut.setText(rs.getString("near_checkout"));
                
            }
        
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        birth1 = new javax.swing.JLabel();
        Address1 = new javax.swing.JLabel();
        nationality1 = new javax.swing.JLabel();
        checkOut1 = new javax.swing.JLabel();
        checkIn1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Fname = new javax.swing.JTextField();
        Id1 = new javax.swing.JLabel();
        Lname = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jDateBirth = new com.toedter.calendar.JDateChooser();
        DBirth = new javax.swing.JTextField();
        nCheckOut = new javax.swing.JTextField();
        checkOut = new javax.swing.JLabel();
        checkIn = new javax.swing.JLabel();
        Id = new javax.swing.JLabel();
        tname = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        nationality = new javax.swing.JLabel();
        DOfBirth = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        Address = new javax.swing.JLabel();
        gender1 = new javax.swing.JComboBox<>();
        jDateCheckIn = new com.toedter.calendar.JDateChooser();
        jDateCheckOut = new com.toedter.calendar.JDateChooser();
        jLocaleChooser1 = new com.toedter.components.JLocaleChooser();
        address = new javax.swing.JTextField();
        fName = new javax.swing.JTextField();
        id1 = new javax.swing.JTextField();
        email1 = new javax.swing.JTextField();
        jComboRoomNo = new javax.swing.JComboBox<>();
        Meal = new javax.swing.JLabel();
        meal = new javax.swing.JComboBox<>();
        roomType = new javax.swing.JLabel();
        RoomNo = new javax.swing.JLabel();
        jComboRoomType = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lName = new javax.swing.JTextField();
        DB = new com.toedter.calendar.JDateChooser();

        jLabel1.setText("jLabel1");

        birth1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        birth1.setText("Date Of Birth:");

        Address1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Address1.setText("Address:");

        nationality1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nationality1.setText("Nationality:");

        checkOut1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkOut1.setText("Check Out:");

        checkIn1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkIn1.setText("Check In:");

        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel2.setText("jLabel2");

        Id1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Id1.setText("Costumer Id:");

        email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailActionPerformed(evt);
            }
        });

        nCheckOut.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        checkOut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkOut.setText("Check Out:");

        checkIn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        checkIn.setText("Check In:");

        Id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Id.setText("Costumer Id:");

        tname.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tname.setText("name:");

        Email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Email.setText("Email:");

        nationality.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        nationality.setText("Nationality:");

        DOfBirth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DOfBirth.setText("DateOfBirth:");

        gender.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        gender.setText("Gender:");

        Address.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Address.setText("Address:");

        gender1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        gender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select your gender", "Male", "Female" }));

        fName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fNameActionPerformed(evt);
            }
        });

        id1.setEditable(false);
        id1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                id1ActionPerformed(evt);
            }
        });

        jComboRoomNo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jComboRoomNo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select room number", "001", "002", "003", "004", "005", "006", "007", "008", "009", "010", "011", "012" }));

        Meal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Meal.setText("Meal:");

        meal.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        meal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Your Meal", "1", "2", "3" }));
        meal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mealActionPerformed(evt);
            }
        });

        roomType.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        roomType.setText("Room Type:");

        RoomNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        RoomNo.setText("Room No.:");

        jComboRoomType.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jComboRoomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select your room type", "Single", "Double", "Sweat" }));
        jComboRoomType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboRoomTypeActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Last name");

        lName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(checkIn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(id1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(RoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jComboRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(25, 25, 25)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLocaleChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(checkOut, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jDateCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(Meal, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(meal, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(DOfBirth)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(DB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(gender1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(125, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lName)
                            .addComponent(fName, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tname, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(email1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nationality, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLocaleChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Address, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(DB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(DOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(gender1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkIn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkOut, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Meal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(meal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboRoomNo, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed

    }//GEN-LAST:event_idActionPerformed

    private void id1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_id1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_id1ActionPerformed

    private void mealActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mealActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mealActionPerformed

    private void jComboRoomTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboRoomTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboRoomTypeActionPerformed

    private void fNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            int id = Integer.parseInt(id1.getText());
            String Fname = fName.getText();
            String Lname = lName.getText();
            String Email = email1.getText();
            int intNat=jLocaleChooser1.getSelectedIndex();
            String Nationality1 =  (String) jLocaleChooser1.getItemAt(intNat);
            String Address = address.getText();
            Date Date_OfBirth = DB.getDate();
            String DateOfBirth = Date_OfBirth + "";
            int intGrnder=gender1.getSelectedIndex(); 
            String Gender1 =  gender1.getItemAt(intGrnder);
            Date jDate_CheckIn = jDateCheckIn.getDate();
            String CheckInDate = jDate_CheckIn + "";
            Date jDate_CheckOUT = jDateCheckOut.getDate();
            String CheckOUTDate = jDate_CheckIn + "";
            int intMeal=gender1.getSelectedIndex();
            String Meal =  meal.getItemAt(intMeal);
            int intRT=gender1.getSelectedIndex();
            String RoomType = (String) jComboRoomType.getSelectedItem();
            int intRN=gender1.getSelectedIndex();
            String RoomNo = (String) jComboRoomNo.getSelectedItem();
            long  nearCheckout1 = jDate_CheckOUT.getTime() - jDate_CheckIn.getTime();
            int diffDays = (int) (nearCheckout1 / 1000 / 60 / 60 / 24);
            String nearC1 = diffDays +"left";
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel1", "root", "");
            Statement st = c.createStatement();
            String sq3 = "SELECT * from costumert where Id = '"+id+"'";
            ResultSet rs1 = st.executeQuery(sq3);
            while (rs1.next()) {
                String dbroomN = (rs1.getString("RoomN"));                
           
                if ( !jComboRoomNo.getSelectedItem().equals(dbroomN ) ){
                    JOptionPane.showMessageDialog(null, "chike room nomber", "Error", JOptionPane.INFORMATION_MESSAGE);
                    System.exit(1);
                }
            }
            String sql ="update costumert set fname='"+Fname+"' ,lname='"+Lname+"',email='"+Email+"',Nationality = '"+Nationality1+"',address = '"+ Address+"',DateOfB = '"+ DateOfBirth + "',Gender = '"+Gender1
                    + "',CheckI = '"+CheckInDate+"',CheckO = '"+CheckOUTDate+"',meal = '"+Meal+"',RoomT = '"
                    +RoomType+"',RoomN = '"+RoomNo+"',near_checkout = '"+nearC1+"' where Id = '"+id+"' ";
            int result =st.executeUpdate(sql);
            if(result==1){
                JOptionPane.showMessageDialog(null,"record has been Updated successfuly :)","success",JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (ClassNotFoundException ex) {
           JOptionPane.showMessageDialog(null, "My SQL Connector noy faund", "Erreor",JOptionPane.ERROR_MESSAGE );
        } catch (SQLException ex) {
            Logger.getLogger(Updatae.class.getName()).log(Level.SEVERE, null, ex);
        }
        //////////////////////////
                try {
            int id = Integer.parseInt(id1.getText());
            Date jDate_CheckIn = jDateCheckIn.getDate();
            Date jDate_CheckOUT = jDateCheckOut.getDate();
            long nearCheckout = jDate_CheckOUT.getTime() - jDate_CheckIn.getTime();
            int diffDays = (int) (nearCheckout / 1000 / 60 / 60 / 24);
            int Single = 50;
            int Double = 80;
            int Sweat = 100;
            int oneMeal = 10;
            int towMeals = 20;
            int ThreeMeals = 30;

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotel1", "root", "");
            Statement st = c.createStatement();

            String sq3 = "SELECT * from costumert where Id";
            ResultSet rs1 = st.executeQuery(sq3);
            int Id1 = 0;
            while (rs1.next()) {
                Id1 = (rs1.getInt("Id"));
               if(id==Id1){
                     break;              
                }
            }

            if (jComboRoomType.getSelectedItem().equals("Single") && meal.getSelectedItem().equals("1")) {
                double tax = (((diffDays * Single) + (diffDays * oneMeal)) * 0.25) / 100;
                double total = ((diffDays * Single) + (diffDays * oneMeal));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + id + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";                
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }

            if (jComboRoomType.getSelectedItem().equals("Double") && meal.getSelectedItem().equals("1")) {
                double tax = (((diffDays * Double) + (diffDays * oneMeal)) * 0.25) / 100;
                double total = ((diffDays * Double) + (diffDays * oneMeal));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
            if (jComboRoomType.getSelectedItem().equals("Sweat") && meal.getSelectedItem().equals("1")) {
                double tax = (((diffDays * Sweat) + (diffDays * oneMeal)) * 0.25) / 100;
                double total = ((diffDays * Sweat) + (diffDays * oneMeal));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }

            if (jComboRoomType.getSelectedItem().equals("Single") && meal.getSelectedItem().equals("2")) {
                double tax = (((diffDays * Single) + (diffDays * towMeals)) * 0.25) / 100;
                double total = ((diffDays * Single) + (diffDays * towMeals));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
             if (jComboRoomType.getSelectedItem().equals("Double") && meal.getSelectedItem().equals("2")) {
                double tax = (((diffDays * Double) + (diffDays * towMeals)) * 0.25) / 100;
                double total = ((diffDays * Double) + (diffDays * towMeals));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }

            if (jComboRoomType.getSelectedItem().equals("Sweat") && meal.getSelectedItem().equals("2")) {
                double tax = (((diffDays * Sweat) + (diffDays * towMeals)) * 0.25) / 100;
                double total = ((diffDays * Sweat) + (diffDays * towMeals));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
            if (jComboRoomType.getSelectedItem().equals("Single") && meal.getSelectedItem().equals("3")) {
                double tax = (((diffDays * Single) + (diffDays * ThreeMeals)) * 0.25) / 100;
                double total = ((diffDays * Single) + (diffDays * ThreeMeals));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }

            if (jComboRoomType.getSelectedItem().equals("Double") && meal.getSelectedItem().equals("3")) {
                double tax = (((diffDays * Double) + (diffDays * ThreeMeals)) * 0.25) / 100;
                double total = ((diffDays * Double) + (diffDays * ThreeMeals));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }
            
            if (jComboRoomType.getSelectedItem().equals("Sweat") && meal.getSelectedItem().equals("3")) {
                double tax = (((diffDays * Sweat) + (diffDays * ThreeMeals)) * 0.25) / 100;
                double total = ((diffDays * Sweat) + (diffDays * ThreeMeals));
                double subTotal = (total + tax);
                String Tax = tax + "$";
                String SubTotal = total + "$";
                String Total = subTotal + "$";
                String sq2 = "update detailed_bill set cost_Id = '" + Id1 + "',b_tax = '" + Tax + "',b_subtotal = '" + SubTotal + "',b_total='" + Total + "' where cost_Id = '"+Id1+"' ";
                int result2 = st.executeUpdate(sq2);
                if (result2 == 1) {
                    JOptionPane.showMessageDialog(null, "detailed_bill has been Updated successfuly", "Success", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Updated detailed_bill", "Error", JOptionPane.INFORMATION_MESSAGE);
                }
            }

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "My SQL Connector noy faund", "Erreor", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(costumer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ////////////////////////
        this.dispose();

        try {
            costumer main;
            main = new costumer();
            main.setVisible(true);
            this.dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Updatae.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Updatae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void lNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lNameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Updatae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Updatae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Updatae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Updatae.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new Updatae().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Address;
    private javax.swing.JLabel Address1;
    private com.toedter.calendar.JDateChooser DB;
    private javax.swing.JTextField DBirth;
    private javax.swing.JLabel DOfBirth;
    private javax.swing.JLabel Email;
    private javax.swing.JTextField Fname;
    private javax.swing.JLabel Id;
    private javax.swing.JLabel Id1;
    private javax.swing.JTextField Lname;
    private javax.swing.JLabel Meal;
    private javax.swing.JLabel RoomNo;
    private javax.swing.JTextField address;
    private javax.swing.JLabel birth1;
    private javax.swing.JLabel checkIn;
    private javax.swing.JLabel checkIn1;
    private javax.swing.JLabel checkOut;
    private javax.swing.JLabel checkOut1;
    private javax.swing.JTextField email;
    private javax.swing.JTextField email1;
    private javax.swing.JTextField fName;
    private javax.swing.JLabel gender;
    private javax.swing.JComboBox<String> gender1;
    private javax.swing.JTextField id;
    private javax.swing.JTextField id1;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboRoomNo;
    private javax.swing.JComboBox<String> jComboRoomType;
    private com.toedter.calendar.JDateChooser jDateBirth;
    private com.toedter.calendar.JDateChooser jDateCheckIn;
    private com.toedter.calendar.JDateChooser jDateCheckOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private com.toedter.components.JLocaleChooser jLocaleChooser1;
    private javax.swing.JTextField lName;
    private javax.swing.JComboBox<String> meal;
    private javax.swing.JTextField nCheckOut;
    private javax.swing.JLabel nationality;
    private javax.swing.JLabel nationality1;
    private javax.swing.JLabel roomType;
    private javax.swing.JLabel tname;
    // End of variables declaration//GEN-END:variables
}
